import java.util.*;

class MyCom implements Comparator<Integer>
{
    public int compare(Integer o1,Integer o2)
    {
        if(o1>o2)
            return -1;
        if(o1<o2)
            return 1;
        return 0;
    }
}

class Point implements Comparable
{
    int x;
    int y;

    public Point(int x,int y)
    {
        this.x=x;
        this.y=y;
    }

    public String toString()
    {
        return "X="+this.x+" Y="+y;
    }
    public int compareTo(Object o)
    {
        Point p=(Point)o;
        if(this.x>p.x)
            return 1;
        else if(this.x<p.x)
            return -1;
        else {
            if(this.y>p.y)
                return 1;
            else if(this.y<p.y)
                return -1;
            else return 0;
        }
    }
}

public class CollectionClass
{
    public static void main(String[] args)
    {
        /*ArrayList<Integer> list=new ArrayList<>();
        list.add(1);
        list.add(2);
        list.add(3);
        list.add(4);

        for(Iterator<Integer> it=list.iterator();it.hasNext();)
        {
            System.out.println(it.next());
        }*/

        //Queue<Integer> q=new ArrayDeque<>();
        /*PriorityQueue<Integer> p=new PriorityQueue<>(new MyCom());
        p.add(20);
        p.add(4);
        p.add(45);
        p.add(12);
        Iterator<Integer> it=p.iterator();
        while(it.hasNext()) {
            System.out.println(it.next());
        }
        System.out.println(p.peek());*/
        /*TreeSet<Point> t=new TreeSet<>();
        //System.out.println(t);
        t.add(new Point(1,1));
        t.add(new Point(5,5));
        t.add(new Point(5,3));
        System.out.println(t);*/

        /*TreeMap<Integer,String> tm=new TreeMap<>();
        tm.put(1,"A");
        tm.put(2,"B");
        System.out.println(tm);

        LinkedHashMap<Integer,String> tm=new LinkedHashMap<>()
        {
            protected boolean removeEldestEntry(Map.Entry e)
            {
                return size()>2;
            }
        };
        tm.put(1,"a");
        tm.put(2,"b");
        tm.put(3,"c");
        tm.forEach((k,v)->System.out.println(k+" "+v));*/
        /*LinkedHashSet<Integer> ls=new LinkedHashSet<>();
        ls.add(1);
        ls.add(5);
        ls.add(3);
        ls.add(4);
        ls.add(2);
        ls.forEach(System.out::println);
        Hashtable h=new Hashtable();
        h.put(1,"a");
        h.put(2,"b");
        Enumeration e=h.elements();
        while(e.hasMoreElements())
            System.out.println(e.nextElement());

        String s="name=Single;address=Coimbatore";
        StringTokenizer stk=new StringTokenizer(s,"=;");
        while(stk.hasMoreElements())
        {
            System.out.println(stk.nextToken());
        }
        Integer a[]={2,4,6,8,1,3,5,7};
        Arrays.sort(a,new MyCom());
        for(int x:a)
        {
            System.out.println(x);
        }*/

    }
}
